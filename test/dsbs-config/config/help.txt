dsbs 
	-op=[init, build, rebuild, clean, run, release] 
	-s=[solution file] 
	-p=[project name] 
	-v 
	-h 
	-useMT 
	-numThreads=[int]
	
	

-op ~ This flag for operations and there are currently only
      6 different states to this flag

      1. build ~ If this is specified it will build the entire solution
         unless the -p flag is specified

      2. clean ~ If thi is specified it will clean the entire solution
         unless the -p flag is specified
         
      3. rebuild ~ This will rebuild the project without considering the
         caching feature of dsbs. If -p is specified then it will only
         rebuild a single project.
      
      4. init ~ This will initialize a directory structure from the 
         solution.json file
         
      5. run ~ This will run the "main" project for dsbs. If the project
         isn't located in your bin-dir then it will build the project
         and then run it. The bin-dir should be the working directory.
         
      6. release ~ This will take the solution file and creates a number of
         packaging formats for whatever platform your using.
         
         a. Linux
         	~ Debian Package
         b. Windows
         	~ Windows Installer

-s ~ This flag allows for the user to select a different solution file
     from the current directory. If not used dsbs assumes the solution
     file to be "solution.json"

-p ~ This flag allows for the user to focus on an individual project from
     the solution. If not used dsbs assumes the entire solution

-v ~ This flag print the version of dsbs, solution file, and profile file.
     If this is specified it won't build or clean any solution and will early
     exit from the application.

-h ~ This flag prints the help informaton for the dsbs command. Just line -v it
     won't build or clean any solution just early exit from the application.

-useMT ~ This flag will tell the dsbs to use multi threading for compilations and cleaning.
         By default -useMT is false.

-numThreads ~ This flag goes hand and hand with useMT. Basically it allows a given user the ability
              to change the amount of threads that they can use with dsbs. By default it uses 8 threads.
              
DEFAULT Values
If command is called like so "./dsbs" or "dsbs" if installed on system.

-op=build
-s=solution.json
-p=
-numThreads=8

